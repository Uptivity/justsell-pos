version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: justsell-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-justsell}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-justsell_secure_password_2024}
      POSTGRES_DB: ${DB_NAME:-justsell_pos}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
      TZ: ${TZ:-UTC}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - justsell-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-justsell} -d ${DB_NAME:-justsell_pos}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: justsell-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - justsell-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    image: justsell-pos:latest
    container_name: justsell-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}

      # Database
      DATABASE_URL: postgresql://${DB_USER:-justsell}:${DB_PASSWORD:-justsell_secure_password_2024}@postgres:5432/${DB_NAME:-justsell_pos}?schema=public&connect_timeout=60

      # Redis
      REDIS_URL: redis://default:${REDIS_PASSWORD:-redis_secure_password_2024}@redis:6379

      # Security
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secure-refresh-secret-change-this-in-production}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secure-session-secret-change-this-in-production}

      # Encryption
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-32-character-encryption-key-change-this}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}

      # File uploads
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-5242880}
      UPLOAD_DIR: ${UPLOAD_DIR:-/app/uploads}

      # Audit logs
      AUDIT_LOG_DIR: ${AUDIT_LOG_DIR:-/app/logs/audit}
      ENABLE_AUDIT_LOG: ${ENABLE_AUDIT_LOG:-true}

      # QuickBooks (optional)
      QUICKBOOKS_CLIENT_ID: ${QUICKBOOKS_CLIENT_ID:-}
      QUICKBOOKS_CLIENT_SECRET: ${QUICKBOOKS_CLIENT_SECRET:-}
      QUICKBOOKS_REDIRECT_URI: ${QUICKBOOKS_REDIRECT_URI:-}
      QUICKBOOKS_ENVIRONMENT: ${QUICKBOOKS_ENVIRONMENT:-sandbox}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./prisma:/app/prisma:ro
    networks:
      - justsell-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: justsell-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - justsell-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  justsell-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local